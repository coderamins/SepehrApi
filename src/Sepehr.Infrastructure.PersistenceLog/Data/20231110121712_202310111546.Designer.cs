// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sepehr.Infrastructure.Persistence.Context;

#nullable disable

namespace Sepehr.Infrastructure.PersistenceLog.Data
{
    [DbContext(typeof(ApplicationLogDbContext))]
    [Migration("20231110121712_202310111546")]
    partial class _202310111546
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("seplog")
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sepehr.Domain.Entities.CargoAnnouncementLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ApprovedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CarPlaque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverMobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("MainId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("RentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnloadingPlaceAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("CargoAnnouncementLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.CustomerLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CustomerCode")
                        .HasColumnType("bigint");

                    b.Property<int>("CustomerType")
                        .HasColumnType("int");

                    b.Property<int>("CustomerValidityId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSupplier")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("MainId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Representative")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SettlementDay")
                        .HasColumnType("int");

                    b.Property<int>("SettlementType")
                        .HasColumnType("int");

                    b.Property<string>("Tel1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("CustomerLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.LadingLicenseDetailLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ApproximateAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LadingLicenseId")
                        .HasColumnType("int");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PackageCount")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("RealAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("LadingLicenseDetailLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.OrderDetailLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AlternativeProductAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("AlternativeProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AlternativeProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CargoSendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MainId")
                        .HasColumnType("int");

                    b.Property<int>("NumberInPackage")
                        .HasColumnType("int");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PackageNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductBrandId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ProximateAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PurchaseInvoiceTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PurchaseSettlementDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PurchaserCustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RowId")
                        .HasColumnType("int");

                    b.Property<string>("SellerCompanyRow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("OrderDetailLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.OrderLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ApprovingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarPlaque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ConfirmedStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerOfficialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DischargePlaceAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExitType")
                        .HasColumnType("int");

                    b.Property<string>("FreightDriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreightName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApprovedInvoiceType")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompletlySended")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("MainId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("OrderCode")
                        .HasColumnType("bigint");

                    b.Property<int>("OrderSendTypeId")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<int>("OrderTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SelectedProductUnitId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SettlementDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("OrderLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.OrderPaymentLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DaysAfterExit")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("MainId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("OrderPaymentLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.OrderServiceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MainId")
                        .HasColumnType("int");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("OrderServiceLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.ProductBrandLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MainId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("ProductBrandLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.ProductDetailLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MainId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Standard")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("ProductDetailLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.ProductInventoryLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("ApproximateInventory")
                        .HasColumnType("float");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FloorInventory")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MainId")
                        .HasColumnType("int");

                    b.Property<double>("MaxInventory")
                        .HasColumnType("float");

                    b.Property<double>("MinInventory")
                        .HasColumnType("float");

                    b.Property<double>("OrderPoint")
                        .HasColumnType("float");

                    b.Property<int>("ProductBrandId")
                        .HasColumnType("int");

                    b.Property<decimal>("Thickness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("ProductInventorieLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.ProductLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ApproximateWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ExchangeRate")
                        .HasColumnType("float");

                    b.Property<int>("InventotyCriticalPoint")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("MainId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxInventory")
                        .HasColumnType("int");

                    b.Property<int>("MinInventory")
                        .HasColumnType("int");

                    b.Property<int>("NumberInPackage")
                        .HasColumnType("int");

                    b.Property<long>("ProductCode")
                        .HasColumnType("bigint");

                    b.Property<int>("ProductMainUnitId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductStandardId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductStateId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductSubUnitId")
                        .HasColumnType("int");

                    b.Property<string>("ProductThickness")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("ProductLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.ProductPriceLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductBrandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("ProductPriceLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.ProductSupplierLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("MainId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("OverPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PriceDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<decimal>("RentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("ProductSupplierLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.ReceivePayLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AccountingApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AccountingApproverId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAccountingApproval")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("MainId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PayToCustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReceiveFromCustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ReceivePayCode")
                        .HasColumnType("bigint");

                    b.Property<int?>("ReceivePaymentSourceFromId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceivePaymentSourceToId")
                        .HasColumnType("int");

                    b.Property<string>("TrachingCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("ReceivePayLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.ReceivePaymentSourceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MainId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("ReceivePaymentSourceLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.LogEntities.LogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("TypeDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LogType", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.LogEntities.SepehrLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MainId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SepehrLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.LogEntities.TableRecordRemovalInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RemovedRecordId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TableRecordRemovalInfoLogs", "seplog");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.CargoAnnouncementLog", b =>
                {
                    b.HasOne("Sepehr.Domain.LogEntities.LogType", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.CustomerLog", b =>
                {
                    b.HasOne("Sepehr.Domain.LogEntities.LogType", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.LadingLicenseDetailLog", b =>
                {
                    b.HasOne("Sepehr.Domain.LogEntities.LogType", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.OrderDetailLog", b =>
                {
                    b.HasOne("Sepehr.Domain.LogEntities.LogType", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.OrderLog", b =>
                {
                    b.HasOne("Sepehr.Domain.LogEntities.LogType", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.OrderPaymentLog", b =>
                {
                    b.HasOne("Sepehr.Domain.LogEntities.LogType", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.OrderServiceLog", b =>
                {
                    b.HasOne("Sepehr.Domain.LogEntities.LogType", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.ProductBrandLog", b =>
                {
                    b.HasOne("Sepehr.Domain.LogEntities.LogType", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.ProductDetailLog", b =>
                {
                    b.HasOne("Sepehr.Domain.LogEntities.LogType", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.ProductInventoryLog", b =>
                {
                    b.HasOne("Sepehr.Domain.LogEntities.LogType", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.ProductLog", b =>
                {
                    b.HasOne("Sepehr.Domain.LogEntities.LogType", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.ProductPriceLog", b =>
                {
                    b.HasOne("Sepehr.Domain.LogEntities.LogType", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.ProductSupplierLog", b =>
                {
                    b.HasOne("Sepehr.Domain.LogEntities.LogType", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.ReceivePayLog", b =>
                {
                    b.HasOne("Sepehr.Domain.LogEntities.LogType", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("Sepehr.Domain.Entities.ReceivePaymentSourceLog", b =>
                {
                    b.HasOne("Sepehr.Domain.LogEntities.LogType", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LogType");
                });
#pragma warning restore 612, 618
        }
    }
}
